{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u043A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430\\\\ChemSolveProject\\\\frontend\\\\src\\\\pages\\\\Analytics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, LineChart, Line } from 'recharts';\nimport { getFeatureImportance, getDistribution, getHistoryOfVersions, getModelComparisons, getValidationData, getCheckedMolecules } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabsGroup1 = ['History of Versions', 'Comparisons of Models', 'General Metrics'];\nconst tabsGroup2 = ['Distribution', 'Validation', 'Checked Molecules'];\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nconst Analytics = () => {\n  _s();\n  const [activeGroup, setActiveGroup] = useState(1);\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  // Стейти для даних різних вкладок\n  const [featureImportance, setFeatureImportance] = useState([]);\n  const [distribution, setDistribution] = useState(null);\n  const [historyData, setHistoryData] = useState([]);\n  const [comparisonData, setComparisonData] = useState([]);\n  const [validationData, setValidationData] = useState([]);\n  const [checkedMoleculesData, setCheckedMoleculesData] = useState([]);\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      try {\n        if (activeGroup === 1) {\n          switch (tabsGroup1[activeTab]) {\n            case 'History of Versions':\n              setHistoryData(await getHistoryOfVersions());\n              break;\n            case 'Comparisons of Models':\n              setComparisonData(await getModelComparisons());\n              break;\n            case 'General Metrics':\n              setFeatureImportance(await getFeatureImportance());\n              break;\n          }\n        } else if (activeGroup === 2) {\n          switch (tabsGroup2[activeTab]) {\n            case 'Distribution':\n              setDistribution(await getDistribution());\n              break;\n            case 'Validation':\n              setValidationData(await getValidationData());\n              break;\n            case 'Checked Molecules':\n              setCheckedMoleculesData(await getCheckedMolecules());\n              break;\n          }\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, [activeGroup, activeTab]);\n  const renderContent = () => {\n    const tabName = activeGroup === 1 ? tabsGroup1[activeTab] : tabsGroup2[activeTab];\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }, this);\n    switch (tabName) {\n      case 'History of Versions':\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          border: 1,\n          cellPadding: 5,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Accuracy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: historyData.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.version\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [(item.accuracy * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this);\n      case 'Comparisons of Models':\n        return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: comparisonData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"rmse\",\n              fill: \"#82ca9d\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n      case 'General Metrics':\n        return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: featureImportance,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"feature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"importance\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this);\n      case 'Distribution':\n        if (!distribution) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No distribution data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 35\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(distribution).map(([key, val]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), \": mean = \", val.mean.toFixed(3), \", std = \", val.std.toFixed(3)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this);\n      case 'Validation':\n        return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: validationData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"epoch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"trainLoss\",\n              stroke: \"#8884d8\",\n              name: \"Train Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"valLoss\",\n              stroke: \"#82ca9d\",\n              name: \"Validation Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this);\n      case 'Checked Molecules':\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          border: 1,\n          cellPadding: 5,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"SMILES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"LogS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: checkedMoleculesData.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.smiles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.logS\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0413\\u0440\\u0430\\u0444\\u0456\\u043A \\u0434\\u043B\\u044F \\\"\", tabName, \"\\\" \\u0449\\u0435 \\u043D\\u0435 \\u0440\\u0435\\u0430\\u043B\\u0456\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0439.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setActiveGroup(1);\n          setActiveTab(0);\n        },\n        children: \"Group 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setActiveGroup(2);\n          setActiveTab(0);\n        },\n        children: \"Group 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginBottom: 20\n      },\n      children: (activeGroup === 1 ? tabsGroup1 : tabsGroup2).map((tab, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(idx),\n        style: {\n          fontWeight: idx === activeTab ? 'bold' : 'normal'\n        },\n        children: tab\n      }, tab, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"oLkEODI8+m3kpxy/IainEexXIXo=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","LineChart","Line","getFeatureImportance","getDistribution","getHistoryOfVersions","getModelComparisons","getValidationData","getCheckedMolecules","jsxDEV","_jsxDEV","tabsGroup1","tabsGroup2","COLORS","Analytics","_s","activeGroup","setActiveGroup","activeTab","setActiveTab","loading","setLoading","featureImportance","setFeatureImportance","distribution","setDistribution","historyData","setHistoryData","comparisonData","setComparisonData","validationData","setValidationData","checkedMoleculesData","setCheckedMoleculesData","loadData","err","console","error","renderContent","tabName","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","map","item","idx","version","date","accuracy","toFixed","width","height","data","strokeDasharray","dataKey","fill","Object","entries","key","val","mean","std","type","stroke","name","id","smiles","logS","style","marginBottom","onClick","display","gap","tab","fontWeight","_c","$RefreshReg$"],"sources":["D:/курсова/ChemSolveProject/frontend/src/pages/Analytics.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid,\r\n  LineChart, Line,\r\n  PieChart, Pie, Cell,\r\n} from 'recharts';\r\n\r\nimport {\r\n  getFeatureImportance,\r\n  getDistribution,\r\n  getHistoryOfVersions,\r\n  getModelComparisons,\r\n  getChemicalClasses,\r\n  getValidationData,\r\n  getCheckedMolecules,\r\n} from '../api';\r\n\r\nconst tabsGroup1 = [\r\n  'History of Versions',\r\n  'Comparisons of Models',\r\n  'General Metrics',\r\n];\r\n\r\nconst tabsGroup2 = [\r\n  'Distribution',\r\n  'Validation',\r\n  'Checked Molecules'\r\n];\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst Analytics: React.FC = () => {\r\n  const [activeGroup, setActiveGroup] = useState(1);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Стейти для даних різних вкладок\r\n  const [featureImportance, setFeatureImportance] = useState<any[]>([]);\r\n  const [distribution, setDistribution] = useState<any>(null);\r\n  const [historyData, setHistoryData] = useState<any[]>([]);\r\n  const [comparisonData, setComparisonData] = useState<any[]>([]);\r\n  const [validationData, setValidationData] = useState<any[]>([]);\r\n  const [checkedMoleculesData, setCheckedMoleculesData] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (activeGroup === 1) {\r\n          switch (tabsGroup1[activeTab]) {\r\n            case 'History of Versions':\r\n              setHistoryData(await getHistoryOfVersions());\r\n              break;\r\n            case 'Comparisons of Models':\r\n              setComparisonData(await getModelComparisons());\r\n              break;\r\n            case 'General Metrics':\r\n              setFeatureImportance(await getFeatureImportance());\r\n              break;\r\n          }\r\n        } else if (activeGroup === 2) {\r\n          switch (tabsGroup2[activeTab]) {\r\n            case 'Distribution':\r\n              setDistribution(await getDistribution());\r\n              break;\r\n            case 'Validation':\r\n              setValidationData(await getValidationData());\r\n              break;\r\n            case 'Checked Molecules':\r\n              setCheckedMoleculesData(await getCheckedMolecules());\r\n              break;\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadData();\r\n  }, [activeGroup, activeTab]);\r\n\r\n  const renderContent = () => {\r\n    const tabName = activeGroup === 1 ? tabsGroup1[activeTab] : tabsGroup2[activeTab];\r\n    if (loading) return <p>Loading...</p>;\r\n\r\n    switch (tabName) {\r\n      case 'History of Versions':\r\n        return (\r\n          <table border={1} cellPadding={5}>\r\n            <thead>\r\n              <tr>\r\n                <th>Version</th>\r\n                <th>Date</th>\r\n                <th>Accuracy</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {historyData.map((item, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{item.version}</td>\r\n                  <td>{item.date}</td>\r\n                  <td>{(item.accuracy * 100).toFixed(1)}%</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        );\r\n\r\n      case 'Comparisons of Models':\r\n        return (\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={comparisonData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"model\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"rmse\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n\r\n      case 'General Metrics':\r\n        return (\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={featureImportance}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"feature\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"importance\" fill=\"#8884d8\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n\r\n      \r\n\r\n      case 'Distribution':\r\n        if (!distribution) return <p>No distribution data</p>;\r\n        return (\r\n          <ul>\r\n            {Object.entries(distribution).map(([key, val]: any) => (\r\n              <li key={key}>\r\n                <strong>{key}</strong>: mean = {val.mean.toFixed(3)}, std = {val.std.toFixed(3)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n\r\n      case 'Validation':\r\n        return (\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={validationData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"epoch\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"trainLoss\" stroke=\"#8884d8\" name=\"Train Loss\" />\r\n              <Line type=\"monotone\" dataKey=\"valLoss\" stroke=\"#82ca9d\" name=\"Validation Loss\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        );\r\n\r\n      case 'Checked Molecules':\r\n        return (\r\n          <table border={1} cellPadding={5}>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>SMILES</th>\r\n                <th>LogS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {checkedMoleculesData.map((item, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{item.id}</td>\r\n                  <td>{item.smiles}</td>\r\n                  <td>{item.logS}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        );\r\n\r\n      default:\r\n        return <p>Графік для \"{tabName}\" ще не реалізований.</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Analytics</h2>\r\n      <div style={{ marginBottom: 10 }}>\r\n        <button onClick={() => { setActiveGroup(1); setActiveTab(0); }}>Group 1</button>\r\n        <button onClick={() => { setActiveGroup(2); setActiveTab(0); }}>Group 2</button>\r\n      </div>\r\n      <div style={{ display: 'flex', gap: '10px', marginBottom: 20 }}>\r\n        {(activeGroup === 1 ? tabsGroup1 : tabsGroup2).map((tab, idx) => (\r\n          <button\r\n            key={tab}\r\n            onClick={() => setActiveTab(idx)}\r\n            style={{ fontWeight: idx === activeTab ? 'bold' : 'normal' }}\r\n          >\r\n            {tab}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}