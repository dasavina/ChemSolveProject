{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u043A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430\\\\ChemSolveProject\\\\frontend\\\\src\\\\pages\\\\Analytics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = ['History of Versions', 'Comparisons of Models', 'Distribution', 'Checked Molecules', 'Feature Importance'];\nconst Analytics = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [featureImportance, setFeatureImportance] = useState([]);\n  const [distribution, setDistribution] = useState(null);\n  const [historyData, setHistoryData] = useState([]);\n  const [comparisonData, setComparisonData] = useState([]);\n  const [checkedMoleculesData, setCheckedMoleculesData] = useState([]);\n\n  // useEffect(() => {\n  //   const loadData = async () => {\n  //     setLoading(true);\n  //     try {\n  //       switch (tabs[activeTab]) {\n  //         case 'History of Versions':\n  //           setHistoryData(await fetchHistory());\n  //           break;\n  //         case 'Comparisons of Models':\n  //           setComparisonData(await getModelComparisons());\n  //           break;\n  //         case 'Distribution':\n  //           setDistribution(await getDistribution());\n  //           break;\n  //         case 'Checked Molecules':\n  //           setCheckedMoleculesData(await getCheckedMolecules());\n  //           break;\n  //         case 'Feature Importance':\n  //           setFeatureImportance(await getFeatureImportance());\n  //           break;\n  //       }\n  //     } catch (err) {\n  //       console.error(err);\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n  //   loadData();\n  // }, [activeTab]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      try {\n        switch (tabs[activeTab]) {\n          case 'History of Versions':\n            setHistoryData([{\n              version: '20250520-141230',\n              date: '2025-05-20',\n              accuracy: 0.912\n            }, {\n              version: '20250518-095820',\n              date: '2025-05-18',\n              accuracy: 0.887\n            }]);\n            break;\n          case 'Comparisons of Models':\n            setComparisonData([{\n              model: '20250520-141230',\n              rmse: 0.152\n            }, {\n              model: '20250518-095820',\n              rmse: 0.179\n            }]);\n            break;\n          case 'Distribution':\n            setDistribution({\n              MolWeight: {\n                mean: 312.6,\n                std: 48.2\n              },\n              LogP: {\n                mean: 2.85,\n                std: 0.92\n              },\n              TPSA: {\n                mean: 72.4,\n                std: 18.7\n              },\n              HBD: {\n                mean: 1.5,\n                std: 0.7\n              },\n              HBA: {\n                mean: 4.6,\n                std: 1.9\n              }\n            });\n            break;\n          case 'Checked Molecules':\n            setCheckedMoleculesData([{\n              \"id\": 1,\n              \"smiles\": \"c1ccccc1\",\n              \"logS\": -1.53,\n              \"slogP\": 78.11,\n              \"clogP\": 1.69,\n              \"xlogP3\": 0.00,\n              \"tpsa\": 12.89,\n              \"asa\": 35.11,\n              \"psa\": 12.89,\n              \"hbd\": 0,\n              \"hba\": 0,\n              \"nhoh_count\": 0,\n              \"bertz_ct\": 215.3,\n              \"num_rings\": 1,\n              \"num_aromatic_rings\": 1,\n              \"fraction_csp3\": 0.0,\n              \"mean_estate\": 0.25,\n              \"sum_partial_charges_logp\": -0.08,\n              \"timestamp\": \"2025-05-23T05:14:36\"\n            }, {\n              \"id\": 2,\n              \"smiles\": \"CCCC\",\n              \"logS\": -2.43,\n              \"slogP\": 58.12,\n              \"clogP\": 1.81,\n              \"xlogP3\": 0.00,\n              \"tpsa\": 0.0,\n              \"asa\": 32.55,\n              \"psa\": 0.0,\n              \"hbd\": 0,\n              \"hba\": 0,\n              \"nhoh_count\": 0,\n              \"bertz_ct\": 185.7,\n              \"num_rings\": 0,\n              \"num_aromatic_rings\": 0,\n              \"fraction_csp3\": 1.0,\n              \"mean_estate\": -0.15,\n              \"sum_partial_charges_logp\": -0.12,\n              \"timestamp\": \"2025-05-23T04:47:00\"\n            }, {\n              \"id\": 3,\n              \"smiles\": \"CCC\",\n              \"logS\": -1.87,\n              \"slogP\": 44.10,\n              \"clogP\": 1.42,\n              \"xlogP3\": 0.00,\n              \"tpsa\": 0.0,\n              \"asa\": 25.88,\n              \"psa\": 0.0,\n              \"hbd\": 0,\n              \"hba\": 0,\n              \"nhoh_count\": 0,\n              \"bertz_ct\": 162.4,\n              \"num_rings\": 0,\n              \"num_aromatic_rings\": 0,\n              \"fraction_csp3\": 1.0,\n              \"mean_estate\": -0.18,\n              \"sum_partial_charges_logp\": -0.10,\n              \"timestamp\": \"2025-05-22T20:33:50\"\n            }, {\n              \"id\": 4,\n              \"smiles\": \"C(CO)O\",\n              \"logS\": 0.78,\n              \"slogP\": 62.07,\n              \"clogP\": -1.03,\n              \"xlogP3\": 40.46,\n              \"tpsa\": 57.53,\n              \"asa\": 48.12,\n              \"psa\": 57.53,\n              \"hbd\": 2,\n              \"hba\": 2,\n              \"nhoh_count\": 2,\n              \"bertz_ct\": 145.6,\n              \"num_rings\": 0,\n              \"num_aromatic_rings\": 0,\n              \"fraction_csp3\": 1.0,\n              \"mean_estate\": 0.10,\n              \"sum_partial_charges_logp\": 0.03,\n              \"timestamp\": \"2025-05-22T17:24:06\"\n            }]);\n            break;\n          case 'Feature Importance':\n            setFeatureImportance([{\n              \"feature\": \"logS\",\n              \"importance\": 0.25\n            }, {\n              \"feature\": \"slogP\",\n              \"importance\": 0.18\n            }, {\n              \"feature\": \"clogP\",\n              \"importance\": 0.15\n            }, {\n              \"feature\": \"xlogP3\",\n              \"importance\": 0.12\n            }, {\n              \"feature\": \"tpsa\",\n              \"importance\": 0.08\n            }, {\n              \"feature\": \"asa\",\n              \"importance\": 0.05\n            }, {\n              \"feature\": \"psa\",\n              \"importance\": 0.03\n            }, {\n              \"feature\": \"hbd\",\n              \"importance\": 0.01\n            }, {\n              \"feature\": \"hba\",\n              \"importance\": 0.01\n            }, {\n              \"feature\": \"nhoh_count\",\n              \"importance\": 0.02\n            }, {\n              \"feature\": \"bertz_ct\",\n              \"importance\": 0.02\n            }, {\n              \"feature\": \"num_rings\",\n              \"importance\": 0.01\n            }, {\n              \"feature\": \"num_aromatic_rings\",\n              \"importance\": 0.02\n            }, {\n              \"feature\": \"fraction_csp3\",\n              \"importance\": 0.01\n            }, {\n              \"feature\": \"mean_estate\",\n              \"importance\": 0.03\n            }, {\n              \"feature\": \"sum_partial_charges_logp\",\n              \"importance\": 0.02\n            }]);\n            break;\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, [activeTab]);\n  const renderContent = () => {\n    const tabName = tabs[activeTab];\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }, this);\n    switch (tabName) {\n      case 'History of Versions':\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          border: 1,\n          cellPadding: 5,\n          style: {\n            width: '100%',\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Accuracy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: historyData.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.version\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.accuracy !== null ? (item.accuracy * 100).toFixed(1) + '%' : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this);\n      case 'Comparisons of Models':\n        return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: comparisonData,\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"rmse\",\n              fill: \"#82ca9d\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this);\n      case 'Distribution':\n        return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: distribution ? Object.entries(distribution).map(([key, val]) => ({\n              name: key,\n              mean: val.mean,\n              std: val.std\n            })) : [],\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"mean\",\n              fill: \"#0088FE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"std\",\n              fill: \"#FFBB28\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this);\n      case 'Checked Molecules':\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          border: 1,\n          cellPadding: 5,\n          style: {\n            width: '100%',\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"SMILES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"LogS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: checkedMoleculesData.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.smiles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.logS\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this);\n      case 'Feature Importance':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Feature Importance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: featureImportance,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"feature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"importance\",\n                fill: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Graph for \\\"\", tabName, \"\\\" not implemented.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginBottom: 20\n      },\n      children: tabs.map((tab, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(idx),\n        style: {\n          fontWeight: idx === activeTab ? 'bold' : 'normal'\n        },\n        children: tab\n      }, tab, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"BlJu/wt4dFDGqBi8gwnxR+HxQBc=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","jsxDEV","_jsxDEV","tabs","Analytics","_s","activeTab","setActiveTab","loading","setLoading","featureImportance","setFeatureImportance","distribution","setDistribution","historyData","setHistoryData","comparisonData","setComparisonData","checkedMoleculesData","setCheckedMoleculesData","loadData","version","date","accuracy","model","rmse","MolWeight","mean","std","LogP","TPSA","HBD","HBA","err","console","error","renderContent","tabName","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","style","width","textAlign","map","item","idx","toFixed","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","Object","entries","key","val","name","id","smiles","logS","display","gap","marginBottom","tab","onClick","fontWeight","_c","$RefreshReg$"],"sources":["D:/курсова/ChemSolveProject/frontend/src/pages/Analytics.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid,\r\n} from 'recharts';\r\n\r\nimport {\r\n  getFeatureImportance,\r\n  getDistribution,\r\n  fetchHistory,\r\n  getModelComparisons,\r\n  getCheckedMolecules,\r\n} from '../api';\r\n\r\nconst tabs = [\r\n  'History of Versions',\r\n  'Comparisons of Models',\r\n  'Distribution',\r\n  'Checked Molecules',\r\n  'Feature Importance',\r\n];\r\n\r\n\r\nconst Analytics: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [featureImportance, setFeatureImportance] = useState<any[]>([]);\r\n  const [distribution, setDistribution] = useState<Record<string, { mean: number, std: number }> | null>(null);\r\n  const [historyData, setHistoryData] = useState<any[]>([]);\r\n  const [comparisonData, setComparisonData] = useState<any[]>([]);\r\n  const [checkedMoleculesData, setCheckedMoleculesData] = useState<any[]>([]);\r\n\r\n  // useEffect(() => {\r\n  //   const loadData = async () => {\r\n  //     setLoading(true);\r\n  //     try {\r\n  //       switch (tabs[activeTab]) {\r\n  //         case 'History of Versions':\r\n  //           setHistoryData(await fetchHistory());\r\n  //           break;\r\n  //         case 'Comparisons of Models':\r\n  //           setComparisonData(await getModelComparisons());\r\n  //           break;\r\n  //         case 'Distribution':\r\n  //           setDistribution(await getDistribution());\r\n  //           break;\r\n  //         case 'Checked Molecules':\r\n  //           setCheckedMoleculesData(await getCheckedMolecules());\r\n  //           break;\r\n  //         case 'Feature Importance':\r\n  //           setFeatureImportance(await getFeatureImportance());\r\n  //           break;\r\n  //       }\r\n  //     } catch (err) {\r\n  //       console.error(err);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n  //   loadData();\r\n  // }, [activeTab]);\r\n\r\nuseEffect(() => {\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      switch (tabs[activeTab]) {\r\n        case 'History of Versions':\r\n          setHistoryData([\r\n            { version: '20250520-141230', date: '2025-05-20', accuracy: 0.912 },\r\n            { version: '20250518-095820', date: '2025-05-18', accuracy: 0.887 },\r\n          ]);\r\n          break;\r\n\r\n        case 'Comparisons of Models':\r\n          setComparisonData([\r\n            { model: '20250520-141230', rmse: 0.152 },\r\n            { model: '20250518-095820', rmse: 0.179 },\r\n          ]);\r\n          break;\r\n\r\n        case 'Distribution':\r\n          setDistribution({\r\n            MolWeight: { mean: 312.6, std: 48.2 },\r\n            LogP: { mean: 2.85, std: 0.92 },\r\n            TPSA: { mean: 72.4, std: 18.7 },\r\n            HBD: { mean: 1.5, std: 0.7 },\r\n            HBA: { mean: 4.6, std: 1.9 },\r\n          });\r\n          break;\r\n\r\n        case 'Checked Molecules':\r\n          setCheckedMoleculesData([\r\n        {\r\n            \"id\": 1,\r\n            \"smiles\": \"c1ccccc1\",\r\n            \"logS\": -1.53,\r\n            \"slogP\": 78.11,\r\n            \"clogP\": 1.69,\r\n            \"xlogP3\": 0.00,\r\n            \"tpsa\": 12.89,\r\n            \"asa\": 35.11,\r\n            \"psa\": 12.89,\r\n            \"hbd\": 0,\r\n            \"hba\": 0,\r\n            \"nhoh_count\": 0,\r\n            \"bertz_ct\": 215.3,\r\n            \"num_rings\": 1,\r\n            \"num_aromatic_rings\": 1,\r\n            \"fraction_csp3\": 0.0,\r\n            \"mean_estate\": 0.25,\r\n            \"sum_partial_charges_logp\": -0.08,\r\n            \"timestamp\": \"2025-05-23T05:14:36\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"smiles\": \"CCCC\",\r\n            \"logS\": -2.43,\r\n            \"slogP\": 58.12,\r\n            \"clogP\": 1.81,\r\n            \"xlogP3\": 0.00,\r\n            \"tpsa\": 0.0,\r\n            \"asa\": 32.55,\r\n            \"psa\": 0.0,\r\n            \"hbd\": 0,\r\n            \"hba\": 0,\r\n            \"nhoh_count\": 0,\r\n            \"bertz_ct\": 185.7,\r\n            \"num_rings\": 0,\r\n            \"num_aromatic_rings\": 0,\r\n            \"fraction_csp3\": 1.0,\r\n            \"mean_estate\": -0.15,\r\n            \"sum_partial_charges_logp\": -0.12,\r\n            \"timestamp\": \"2025-05-23T04:47:00\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"smiles\": \"CCC\",\r\n            \"logS\": -1.87,\r\n            \"slogP\": 44.10,\r\n            \"clogP\": 1.42,\r\n            \"xlogP3\": 0.00,\r\n            \"tpsa\": 0.0,\r\n            \"asa\": 25.88,\r\n            \"psa\": 0.0,\r\n            \"hbd\": 0,\r\n            \"hba\": 0,\r\n            \"nhoh_count\": 0,\r\n            \"bertz_ct\": 162.4,\r\n            \"num_rings\": 0,\r\n            \"num_aromatic_rings\": 0,\r\n            \"fraction_csp3\": 1.0,\r\n            \"mean_estate\": -0.18,\r\n            \"sum_partial_charges_logp\": -0.10,\r\n            \"timestamp\": \"2025-05-22T20:33:50\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"smiles\": \"C(CO)O\",\r\n            \"logS\": 0.78,\r\n            \"slogP\": 62.07,\r\n            \"clogP\": -1.03,\r\n            \"xlogP3\": 40.46,\r\n            \"tpsa\": 57.53,\r\n            \"asa\": 48.12,\r\n            \"psa\": 57.53,\r\n            \"hbd\": 2,\r\n            \"hba\": 2,\r\n            \"nhoh_count\": 2,\r\n            \"bertz_ct\": 145.6,\r\n            \"num_rings\": 0,\r\n            \"num_aromatic_rings\": 0,\r\n            \"fraction_csp3\": 1.0,\r\n            \"mean_estate\": 0.10,\r\n            \"sum_partial_charges_logp\": 0.03,\r\n            \"timestamp\": \"2025-05-22T17:24:06\"\r\n        }\r\n    ]);\r\n          break;\r\n\r\n        case 'Feature Importance':\r\n          setFeatureImportance([\r\n  { \"feature\": \"logS\", \"importance\": 0.25 },\r\n  { \"feature\": \"slogP\", \"importance\": 0.18 },\r\n  { \"feature\": \"clogP\", \"importance\": 0.15 },\r\n  { \"feature\": \"xlogP3\", \"importance\": 0.12 },\r\n  { \"feature\": \"tpsa\", \"importance\": 0.08 },\r\n  { \"feature\": \"asa\", \"importance\": 0.05 },\r\n  { \"feature\": \"psa\", \"importance\": 0.03 },\r\n  { \"feature\": \"hbd\", \"importance\": 0.01 },\r\n  { \"feature\": \"hba\", \"importance\": 0.01 },\r\n  { \"feature\": \"nhoh_count\", \"importance\": 0.02 },\r\n  { \"feature\": \"bertz_ct\", \"importance\": 0.02 },\r\n  { \"feature\": \"num_rings\", \"importance\": 0.01 },\r\n  { \"feature\": \"num_aromatic_rings\", \"importance\": 0.02 },\r\n  { \"feature\": \"fraction_csp3\", \"importance\": 0.01 },\r\n  { \"feature\": \"mean_estate\", \"importance\": 0.03 },\r\n  { \"feature\": \"sum_partial_charges_logp\", \"importance\": 0.02 }\r\n\r\n\r\n          ]);\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  loadData();\r\n}, [activeTab]);\r\n\r\n\r\n\r\n  const renderContent = () => {\r\n    const tabName = tabs[activeTab];\r\n    if (loading) return <p>Loading...</p>;\r\n\r\n    switch (tabName) {\r\n      case 'History of Versions':\r\n        return (\r\n          <table border={1} cellPadding={5} style={{ width: '100%', textAlign: 'left' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Version</th>\r\n                <th>Date</th>\r\n                <th>Accuracy</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {historyData.map((item, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{item.version}</td>\r\n                  <td>{item.date}</td>\r\n                  <td>{item.accuracy !== null ? (item.accuracy * 100).toFixed(1) + '%' : 'N/A'}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        );\r\n\r\n      case 'Comparisons of Models':\r\n        return (\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={comparisonData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"model\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"rmse\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n\r\n      case 'Distribution':\r\n        return (\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart\r\n              data={distribution ? Object.entries(distribution).map(([key, val]) => ({\r\n                name: key,\r\n                mean: val.mean,\r\n                std: val.std,\r\n              })) : []}\r\n              margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"mean\" fill=\"#0088FE\" />\r\n              <Bar dataKey=\"std\" fill=\"#FFBB28\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n\r\n      case 'Checked Molecules':\r\n        return (\r\n          <table border={1} cellPadding={5} style={{ width: '100%', textAlign: 'left' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>SMILES</th>\r\n                <th>LogS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {checkedMoleculesData.map((item, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{item.id}</td>\r\n                  <td>{item.smiles}</td>\r\n                  <td>{item.logS}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        );\r\n\r\n      case 'Feature Importance':\r\n        return (\r\n          <div>\r\n            <h3>Feature Importance</h3>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={featureImportance} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"feature\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"importance\" fill=\"#8884d8\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return <p>Graph for \"{tabName}\" not implemented.</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Analytics</h2>\r\n      <div style={{ display: 'flex', gap: '10px', marginBottom: 20 }}>\r\n        {tabs.map((tab, idx) => (\r\n          <button\r\n            key={tab}\r\n            onClick={() => setActiveTab(idx)}\r\n            style={{ fontWeight: idx === activeTab ? 'bold' : 'normal' }}\r\n          >\r\n            {tab}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}