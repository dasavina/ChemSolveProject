{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u043A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430\\\\ChemSolveProject\\\\frontend\\\\src\\\\pages\\\\Predict.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst featureNames = [\"SLogP\", \"CLogP\", \"XLogP3\", \"TPSA\", \"ASA\", \"PSA\", \"HBD\", \"HBA\", \"NHOHCount\", \"BertzCT\", \"NumRings\", \"NumAromaticRings\", \"FractionCsp3\", \"Mean_EState\", \"Sum_PartialCharges_LogP\"];\nconst Predict = () => {\n  _s();\n  const [smiles, setSmiles] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const onSubmit = async () => {\n    setError('');\n    setResult(null);\n    try {\n      const response = await api.post('/predict', {\n        smiles\n      });\n      setResult(response.data);\n      console.log(smiles);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.log(smiles);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Prediction failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Predict Solubility\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter SMILES string\",\n      value: smiles,\n      onChange: e => setSmiles(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"SMILES:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }, this), \" \", result.smiles]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"LogS:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }, this), \" \", result.logS]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Features:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: result.features.map((val, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [val.name || featureNames[idx] || `Feature ${idx + 1}`, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), \" \", val.value]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Predict, \"Z1BRGygPnkFR11cARu7bKSLI1EA=\");\n_c = Predict;\nexport default Predict;\nvar _c;\n$RefreshReg$(_c, \"Predict\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","featureNames","Predict","_s","smiles","setSmiles","result","setResult","error","setError","onSubmit","response","post","data","console","log","err","_err$response","_err$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","logS","features","map","val","idx","name","_c","$RefreshReg$"],"sources":["D:/курсова/ChemSolveProject/frontend/src/pages/Predict.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from '../api';\r\n\r\nconst featureNames = [\r\n    \"SLogP\", \"CLogP\", \"XLogP3\", \"TPSA\", \"ASA\", \"PSA\",\r\n    \"HBD\", \"HBA\", \"NHOHCount\", \"BertzCT\", \"NumRings\", \"NumAromaticRings\",\r\n    \"FractionCsp3\", \"Mean_EState\", \"Sum_PartialCharges_LogP\"\r\n];\r\n\r\nconst Predict: React.FC = () => {\r\n  const [smiles, setSmiles] = useState('');\r\n  const [result, setResult] = useState<any>(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const onSubmit = async () => {\r\n    setError('');\r\n    setResult(null);\r\n    try {\r\n      const response = await api.post('/predict', { smiles });\r\n      setResult(response.data);\r\n      console.log(smiles);\r\n    } catch (err: any) {\r\n      console.log(smiles);\r\n      setError(err.response?.data?.error || 'Prediction failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Predict Solubility</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter SMILES string\"\r\n        value={smiles}\r\n        onChange={e => setSmiles(e.target.value)}\r\n      />\r\n      <button onClick={onSubmit}>Predict</button>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {result && (\r\n        <div>\r\n          <h3>Prediction Results</h3>\r\n          <p><strong>SMILES:</strong> {result.smiles}</p>\r\n          <p><strong>LogS:</strong> {result.logS}</p>\r\n          <h4>Features:</h4>\r\n          <ul>\r\n            {result.features.map((val: { name: string; value: number }, idx: number) => (\r\n              <li key={idx}>\r\n                <strong>{val.name || featureNames[idx] || `Feature ${idx + 1}`}:</strong> {val.value}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Predict;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}