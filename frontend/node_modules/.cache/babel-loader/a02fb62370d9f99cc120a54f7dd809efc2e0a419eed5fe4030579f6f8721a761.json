{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  timeout: 60000 // розумний таймаут, якщо тренування довге\n});\nexport default api;\n\n// --- Основні запити ---\nexport const predictSolubility = async smiles => {\n  const response = await api.post('/predict', {\n    smiles\n  });\n  return response.data;\n};\nexport const fetchHistory = async () => {\n  const response = await api.get('/history');\n  return response.data;\n};\nexport const trainModel = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  const response = await api.post('/train', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\nexport const fetchMetrics = async () => {\n  const response = await api.get('/metrics');\n  return response.data;\n};\n\n// --- Аналітика ---\n\nexport const getHistoryOfVersions = async () => {\n  const res = await axios.get('/api/history-of-versions');\n  return res.data;\n};\nexport const getModelComparisons = async () => {\n  const res = await axios.get('/api/model-comparisons'); // ✅ правильний шлях\n  return res.data;\n};\nexport const getDistribution = async () => {\n  const res = await axios.get('/api/distribution'); // ✅ правильний шлях\n  return res.data;\n};\nexport const getFeatureImportance = async () => {\n  const res = await axios.get('/api/feature-importance'); // ✅ правильний шлях\n  return res.data;\n};\nexport const getCheckedMolecules = async () => {\n  const res = await axios.get('/api/checked-molecules'); // ✅ правильний шлях\n  return res.data;\n};","map":{"version":3,"names":["axios","api","create","baseURL","timeout","predictSolubility","smiles","response","post","data","fetchHistory","get","trainModel","file","formData","FormData","append","headers","fetchMetrics","getHistoryOfVersions","res","getModelComparisons","getDistribution","getFeatureImportance","getCheckedMolecules"],"sources":["D:/курсова/ChemSolveProject/frontend/src/api/index.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n  timeout: 60000,  // розумний таймаут, якщо тренування довге\r\n});\r\n\r\nexport default api;\r\n\r\n// --- Основні запити ---\r\nexport const predictSolubility = async (smiles: string) => {\r\n  const response = await api.post('/predict', { smiles });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchHistory = async () => {\r\n  const response = await api.get('/history');\r\n  return response.data;\r\n};\r\n\r\nexport const trainModel = async (file: File) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  const response = await api.post('/train', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMetrics = async () => {\r\n  const response = await api.get('/metrics');\r\n  return response.data;\r\n};\r\n\r\n// --- Аналітика ---\r\n\r\nexport const getHistoryOfVersions = async () => {\r\n  const res = await axios.get('/api/history-of-versions');\r\n  return res.data;\r\n};\r\n\r\nexport const getModelComparisons = async () => {\r\n  const res = await axios.get('/api/model-comparisons'); // ✅ правильний шлях\r\n  return res.data;\r\n};\r\n\r\nexport const getDistribution = async () => {\r\n  const res = await axios.get('/api/distribution'); // ✅ правильний шлях\r\n  return res.data;\r\n};\r\n\r\nexport const getFeatureImportance = async () => {\r\n  const res = await axios.get('/api/feature-importance'); // ✅ правильний шлях\r\n  return res.data;\r\n};\r\n\r\nexport const getCheckedMolecules = async () => {\r\n  const res = await axios.get('/api/checked-molecules'); // ✅ правильний шлях\r\n  return res.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE,KAAK,CAAG;AACnB,CAAC,CAAC;AAEF,eAAeH,GAAG;;AAElB;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAOC,MAAc,IAAK;EACzD,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,UAAU,EAAE;IAAEF;EAAO,CAAC,CAAC;EACvD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMH,QAAQ,GAAG,MAAMN,GAAG,CAACU,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAOC,IAAU,IAAK;EAC9C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,QAAQ,EAAEM,QAAQ,EAAE;IAClDG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;EACF,OAAOV,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMX,QAAQ,GAAG,MAAMN,GAAG,CAACU,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;;AAEA,OAAO,MAAMU,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACW,GAAG,CAAC,0BAA0B,CAAC;EACvD,OAAOS,GAAG,CAACX,IAAI;AACjB,CAAC;AAED,OAAO,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,MAAMD,GAAG,GAAG,MAAMpB,KAAK,CAACW,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACvD,OAAOS,GAAG,CAACX,IAAI;AACjB,CAAC;AAED,OAAO,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMF,GAAG,GAAG,MAAMpB,KAAK,CAACW,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;EAClD,OAAOS,GAAG,CAACX,IAAI;AACjB,CAAC;AAED,OAAO,MAAMc,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,MAAMH,GAAG,GAAG,MAAMpB,KAAK,CAACW,GAAG,CAAC,yBAAyB,CAAC,CAAC,CAAC;EACxD,OAAOS,GAAG,CAACX,IAAI;AACjB,CAAC;AAED,OAAO,MAAMe,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,MAAMJ,GAAG,GAAG,MAAMpB,KAAK,CAACW,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACvD,OAAOS,GAAG,CAACX,IAAI;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}