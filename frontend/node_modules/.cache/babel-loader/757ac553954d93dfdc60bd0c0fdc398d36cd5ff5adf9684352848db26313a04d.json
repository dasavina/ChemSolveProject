{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  timeout: 10000\n});\nexport default api;\nexport const predictSolubility = async smiles => {\n  const response = await api.post('/predict', {\n    smiles\n  });\n  return response.data;\n};\nexport const fetchHistory = async () => {\n  const response = await api.get('/history');\n  return response.data;\n};\nexport const trainModel = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  const response = await api.post('/train', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\nexport const fetchMetrics = async () => {\n  const response = await api.get('/metrics');\n  return response.data;\n};\nexport const getFeatureImportance = async () => {\n  const response = await api.get('/feature-importance');\n  return response.data;\n};\nexport const getDistribution = async () => {\n  const response = await api.get('/feature-distribution');\n  return response.data;\n};\nexport async function getHistoryOfVersions() {\n  const res = await fetch('/api/history-of-versions');\n  if (!res.ok) throw new Error('Failed to fetch history');\n  return res.json();\n}\nexport async function getModelComparisons() {\n  const res = await fetch('/api/model-comparisons');\n  if (!res.ok) throw new Error('Failed to fetch model comparisons');\n  return res.json();\n}\nexport async function getChemicalClasses() {\n  const res = await fetch('/api/chemical-classes');\n  if (!res.ok) throw new Error('Failed to fetch chemical classes');\n  return res.json();\n}\nexport async function getValidationData() {\n  const res = await fetch('/api/validation-data');\n  if (!res.ok) throw new Error('Failed to fetch validation data');\n  return res.json();\n}\nexport async function getCheckedMolecules() {\n  const res = await fetch('/api/checked-molecules');\n  if (!res.ok) throw new Error('Failed to fetch checked molecules');\n  return res.json();\n}","map":{"version":3,"names":["axios","api","create","baseURL","timeout","predictSolubility","smiles","response","post","data","fetchHistory","get","trainModel","file","formData","FormData","append","headers","fetchMetrics","getFeatureImportance","getDistribution","getHistoryOfVersions","res","fetch","ok","Error","json","getModelComparisons","getChemicalClasses","getValidationData","getCheckedMolecules"],"sources":["D:/курсова/ChemSolveProject/frontend/src/api/index.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n  timeout: 10000,\r\n});\r\n\r\nexport default api;\r\n\r\nexport const predictSolubility = async (smiles: string) => {\r\n  const response = await api.post('/predict', { smiles });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchHistory = async () => {\r\n  const response = await api.get('/history');\r\n  return response.data;\r\n};\r\n\r\nexport const trainModel = async (file: File) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  const response = await api.post('/train', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMetrics = async () => {\r\n  const response = await api.get('/metrics');\r\n  return response.data;\r\n};\r\n\r\nexport const getFeatureImportance = async () => {\r\n  const response = await api.get('/feature-importance');\r\n  return response.data;\r\n};\r\n\r\nexport const getDistribution = async () => {\r\n  const response = await api.get('/feature-distribution');\r\n  return response.data;\r\n};\r\nexport async function getHistoryOfVersions() {\r\n  const res = await fetch('/api/history-of-versions');\r\n  if (!res.ok) throw new Error('Failed to fetch history');\r\n  return res.json();\r\n}\r\n\r\nexport async function getModelComparisons() {\r\n  const res = await fetch('/api/model-comparisons');\r\n  if (!res.ok) throw new Error('Failed to fetch model comparisons');\r\n  return res.json();\r\n}\r\n\r\nexport async function getChemicalClasses() {\r\n  const res = await fetch('/api/chemical-classes');\r\n  if (!res.ok) throw new Error('Failed to fetch chemical classes');\r\n  return res.json();\r\n}\r\n\r\nexport async function getValidationData() {\r\n  const res = await fetch('/api/validation-data');\r\n  if (!res.ok) throw new Error('Failed to fetch validation data');\r\n  return res.json();\r\n}\r\n\r\nexport async function getCheckedMolecules() {\r\n  const res = await fetch('/api/checked-molecules');\r\n  if (!res.ok) throw new Error('Failed to fetch checked molecules');\r\n  return res.json();\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}