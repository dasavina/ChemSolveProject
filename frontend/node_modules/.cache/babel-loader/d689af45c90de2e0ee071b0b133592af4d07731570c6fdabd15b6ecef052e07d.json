{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u043A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430\\\\ChemSolveProject\\\\frontend\\\\src\\\\pages\\\\Metrics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metrics = () => {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    api.get('/metrics').then(res => setMetrics(res.data)).catch(() => setError('Failed to load metrics'));\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  if (!metrics) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading metrics...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 24\n  }, this);\n\n  // Перетворюємо метрики в масив для графіка\n  const chartData = [{\n    name: 'R² Score',\n    value: metrics.r2_score\n  }, {\n    name: 'RMSE',\n    value: metrics.rmse\n  }, {\n    name: 'MAE',\n    value: metrics.mae\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Model Performance Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          allowDecimals: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"value\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Metrics, \"mivG+I5L7DfmixHkJJnOJ4bToiY=\");\n_c = Metrics;\nexport default Metrics;\nvar _c;\n$RefreshReg$(_c, \"Metrics\");","map":{"version":3,"names":["React","useEffect","useState","api","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","jsxDEV","_jsxDEV","Metrics","_s","metrics","setMetrics","error","setError","get","then","res","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","name","value","r2_score","rmse","mae","width","height","strokeDasharray","dataKey","allowDecimals","fill","_c","$RefreshReg$"],"sources":["D:/курсова/ChemSolveProject/frontend/src/pages/Metrics.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend\r\n} from 'recharts';\r\n\r\nconst Metrics: React.FC = () => {\r\n  const [metrics, setMetrics] = useState<any>(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    api.get('/metrics')\r\n      .then(res => setMetrics(res.data))\r\n      .catch(() => setError('Failed to load metrics'));\r\n  }, []);\r\n\r\n  if (error) return <p>{error}</p>;\r\n  if (!metrics) return <p>Loading metrics...</p>;\r\n\r\n  // Перетворюємо метрики в масив для графіка\r\n  const chartData = [\r\n    { name: 'R² Score', value: metrics.r2_score },\r\n    { name: 'RMSE', value: metrics.rmse },\r\n    { name: 'MAE', value: metrics.mae }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Model Performance Metrics</h2>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis allowDecimals={true} />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Metrics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}